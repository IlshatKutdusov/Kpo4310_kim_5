using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace AccessoryTestClassLibrary
{
    public class Accessory
    {
        /* Эти переменные хранят в себе базовую информацию об комплектующем */

        // Объявление переменной для имени компклектующего
        private string name;

        // Объявление переменной для типа компклектующего
        private string type;

        // Объявление переменной для номинала компклектующего
        private double value;

        // Объявление переменной для количества компклектующего
        private double quantity;

        /* Этот конструктор создает экземпляр объекта класса со стандартными значениями перемнных */
        
        // Конструктор без параметров
        public Accessory()
        {
            // Переменной имени компклектующего присвоено значение
            name = "RT-11-24";

            // Переменной типа компклектующего присвоено значение
            type = "R";

            // Переменной номинала компклектующего присвоено значение
            value = 50000;

            // Переменной количества компклектующего присвоено значение
            quantity = 10;
        }


        /* Этот метод позволяет получить значение переменной имени комлпектующего */

        // Метод без параметров
        public string getName()
        {
            // Возвращение значения переменной имени комлпектующего
            return name;
        }

        /* Этот метод позволяет получить значение переменной типа комлпектующего */

        // Метод без параметров
        public string getType()
        {
            // Возвращение значения переменной типа комлпектующего
            return type;
        }

        /* Этот метод позволяет получить значение переменной номинала комлпектующего */

        // Метод без параметров
        public double getValue()
        {
            // Возвращение значения переменной номинала комлпектующего
            return value;
        }

        /* Этот метод позволяет получить значение переменной количества комлпектующего */

        // Метод без параметров
        public double getQuantity()
        {
            // Возвращение значения переменной количества комлпектующего
            return quantity;
        }

        /* Этот метод позволяет проверить значение параметра на соответствие 
         * требованиям для значений переменной типа комлпектующего */

        // Метод с параметром
        public bool checkType(string newType)
        {
            // Если значение параметра равно одному из типов
            if (newType == "C" | newType == "R")
            {
                // Возвращение TRUE
                return true;
            }
            // В противном случае
            else
            {
                // Возвращение FALSE
                return false;
            }
        }

        /* Этот метод позволяет присвоить значение параметра переменной типа 
         * комлпектующего, проверив при этом на соответствие требованиям для 
         * значений переменой типа комплектующего */

        // Метод с параметром
        public bool changeType(string newType)
        {
            // Если значение метода проверки типа с параметром равен TRUE
            if (checkType(newType))
            {
                // Присвоение переменной типа комплектующего значение параметра метода
                type = newType;

                // Возвращение TRUE
                return true;
            }
            // В противном случае
            else
            {
                // Возвращение FALSE
                return false;
            }
        }


        /* Этот метод позволяет проверить значение параметра на соответствие 
         * требованиям для значений переменной номинала комлпектующего */

        // Метод с параметром
        public bool checkValue(double newValue)
        {
            // Если значение параметра больше или равно нулю
            if (newValue >= 0)
            {
                // Возвращение TRUE
                return true;
            }
            // В противном случае
            else
            {
                // Возвращение FALSE
                return false;
            }
        }

        /* Этот метод позволяет присвоить значение параметра переменной номинала 
         * комлпектующего, проверив при этом на соответствие требованиям для 
         * значений переменой номинала комплектующего */

        // Метод с параметром
        public bool changeValue(double newValue)
        {
            // Если значение метода проверки номинала с параметром равен TRUE
            if (checkValue(newValue))
            {
                // Присвоение переменной номинала комплектующего значение параметра метода
                value = newValue;

                // Возвращение TRUE
                return true;
            }
            // В противном случае
            else
            {
                // Возвращение FALSE
                return false;
            }
        }

        /* Этот метод позволяет проверить значение параметра на соответствие 
         * требованиям для значений переменной количества комлпектующего */

        // Метод с параметром
        public bool checkQuantity(double newQuantity)
        {
            // Если значение параметра больше или равно нулю
            if (newQuantity >= 0)
            {
                // Возвращение TRUE
                return true;
            }
            // В противном случае
            else
            {
                // Возвращение FALSE
                return false;
            }
        }

        /* Этот метод позволяет присвоить значение параметра переменной количества 
         * комлпектующего, проверив при этом на соответствие требованиям для 
         * значений переменой количества комплектующего */

        // Метод с параметром
        public bool changeQuantity(double newQuantity)
        {
            // Если значение метода проверки количества с параметром равен TRUE
            if (checkQuantity(newQuantity))
            {
                // Присвоение переменной количества комплектующего значение параметра метода
                quantity = newQuantity;

                // Возвращение TRUE
                return true;
            }
            // В противном случае
            else
            {
                // Возвращение FALSE
                return false;
            }
        }

        /* Этот метод позволяет узнать тип комплектующего, 
         * возвращая название типа на русском языке */

        // Метод без параметра
        public string whatType()
        {
            // Если значение переменной типа равно С
            if (type == "C")
            {
                // Возвращение "Конденсатор"
                return "Конденсатор";
            }
            // В противном случае
            else
            {
                // Возвращение "Резистор"
                return "Резистор";
            }
        }
    }
}
